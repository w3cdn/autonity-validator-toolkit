#!/bin/bash

ROOT_PATH=$( dirname -- "$( readlink -f -- "$0"; )"; );
BASE_PATH=`realpath $ROOT_PATH/../`
WG_CONFIG_PATH=`realpath $ROOT_PATH/../.data/wireguard/config`

set -a
source $ROOT_PATH/../.env
source $ROOT_PATH/../.PACKAGE_USE
set -a


IP_PARTS=(${WIREGUARD_SUBNET//./ })
PRIVATE_NETWORK_IP="${IP_PARTS[0]}.${IP_PARTS[1]}.${IP_PARTS[2]}.1"

DOCKER_SUBNET_PARTS=(${DOCKER_SUBNET_MASK//./ })
DOCKER_SUBNET_PREFIX="${DOCKER_SUBNET_PARTS[0]}.${DOCKER_SUBNET_PARTS[1]}.${DOCKER_SUBNET_PARTS[2]}"

export PRIVATE_NETWORK_IP=$PRIVATE_NETWORK_IP
export DOCKER_SUBNET_PREFIX=$DOCKER_SUBNET_PREFIX

if [ -z "${SECURE_NETWORK_IP}" ]; then
    export SECURE_NETWORK_IP="${DOCKER_SUBNET_PREFIX}.1"
fi


rm "$BASE_PATH/AutonityHandbook.tar.gz"  2> /dev/null
rm -R -f "$BASE_PATH/AutonityHandbook"  2> /dev/null

mkdir $BASE_PATH/AutonityHandbook
mkdir $BASE_PATH/AutonityHandbook/wireguard
mkdir $BASE_PATH/AutonityHandbook/keys

cp  $BASE_PATH/.env  $BASE_PATH/AutonityHandbook/env.dump
cp  $BASE_PATH/.data/autonity_node/autonity/autonitykeys $BASE_PATH/AutonityHandbook/autonitykeys
cp  $BASE_PATH/.data/.autonity/keystore/* $BASE_PATH/AutonityHandbook/keys

if [  -f " ${WG_CONFIG_PATH}/peer1/peer1.conf" ]; then

    cp   ${WG_CONFIG_PATH}/peer1/peer1.conf $BASE_PATH/AutonityHandbook/wireguard/client1.conf
    cp   ${WG_CONFIG_PATH}/peer1/peer1.png $BASE_PATH/AutonityHandbook/wireguard/client1.png

    cp   ${WG_CONFIG_PATH}/peer2/peer2.conf $BASE_PATH/AutonityHandbook/wireguard/client2.conf
    cp   ${WG_CONFIG_PATH}/peer2/peer2.png $BASE_PATH/AutonityHandbook/wireguard/client2.png
fi

touch "$BASE_PATH/AutonityHandbook/Autonity_Handbook.txt"

echo -en "$EINS \033[$FG\033[44m ############## GENERATING Autonity Hanbook #############  \033[0m\n\n\n\n"

echo  -en "  Please save content below to your computer.\n \x1b[33;43m \x1b[30m PS don\'t panic, this content also will be saved to  $BASE_PATH/AutonityHandbook.tar.gz file \x1b[0m \n\n\n"


echo -en " \x1b[31m ----------------------------------------------------------------------------------------- \x1b[0m  \n\n"


echo -en "‚ù§ Grafana:  http://${DOCKER_SUBNET_PREFIX}.10:3000 \n" | tee -a  $BASE_PATH/AutonityHandbook/Autonity_Handbook.txt
echo -en "        Login: admin" | tee -a $BASE_PATH/AutonityHandbook/Autonity_Handbook.txt
echo -en "        Password: ${GRAFANA_ADMIN_PASSWORD} \n\n" | tee -a  $BASE_PATH/AutonityHandbook/Autonity_Handbook.txt

if [  -f " ${WG_CONFIG_PATH}/peer1/peer1.conf" ]; then
  echo -en "üí´ Wireguard client configuration file:  ${WG_CONFIG_PATH}/peer1/peer1.conf \n\n" | tee -a $BASE_PATH/AutonityHandbook/Autonity_Handbook.txt
  echo -en "üí´ Wireguard client(2) configuration file:  ${WG_CONFIG_PATH}/peer2/peer2.conf \n\n" | tee -a $BASE_PATH/AutonityHandbook/Autonity_Handbook.txt
fi

echo -en "\n\n \x1b[31m ----------------------------------------------------------------------------------------- \x1b[0m \n "


`tar  -cjf  $BASE_PATH/AutonityHandbook.tar.gz -C $BASE_PATH/AutonityHandbook $(ls -A $BASE_PATH/AutonityHandbook)`
rm -r -f $BASE_PATH/AutonityHandbook


echo -en "‚ù§ Configuration ready. Please download  \x1b[9;4m $BASE_PATH/AutonityHandbook.tar.gz \x1b[0m from server to your work pc. And continue reading to @Connecting to wireguard network \n" 
echo -en "\n\n"
